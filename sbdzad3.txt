WHERE AND OR ORDER BY
zad1
SELECT * from customers WHERE country="germany";
zad2
SELECT * from customers WHERE city="berlin";
zad3
SELECT * from customers WHERE city="berlin" AND country="germany";
zad4
SELECT * from customers WHERE city="berlin" OR "munchen" AND country="germany";
zad5
SELECT * from customers WHERE country NOT LIKE "germany" OR "USA";
zad6
SELECT * from customers ORDER by country ASC;
zad7
SELECT * from customers ORDER by country DESC;
zad8
SELECT * from customers ORDER by country DESC, Customer_name ASC;

MIN MAX COUNT AVG SUM GROUP BY
zad 1
SELECT MIN(price) from products;
zad2
SELECT MAX(price) from products;
zad3
SELECT COUNT(unit) from products;
zad4
SELECT COUNT(customer_name) from customers;
zad5
SELECT COUNT(customer_name),country from customers GROUP BY country;
zad6
SELECT COUNT(name),AVG(price) FROM products WHERE category_id="1";
zad7
SELECT SUM(price) FROM products WHERE category_id="2";
zad8
SELECT MAX(price) FROM products WHERE category_id="1" OR category_id="2";

BETWEEN NOT BETWEEN IN NOT IN SUBQUERY
zad1
SELECT * from products WHERE price BETWEEN 10 AND 20;
zad2
SELECT * from products WHERE price NOT BETWEEN 10 AND 20;
zad3
SELECT * from products WHERE category_id IN (1,2,3);
zad4
SELECT * from orders WHERE shipper_id IN(1,2,3);
zad5
SELECT * from products WHERE price BETWEEN 10 AND 15 AND supplier_id NOT IN(1,2,3,4);
zad6
SELECT * from orders WHERE time(order_date) BETWEEN 1996-07-01 AND 1996-07-31;
zad7
SELECT * from orders WHERE customer_id IN(SELECT customer_id FROM orders WHERE customer_id BETWEEN 77 AND 90);

JOIN INNER JOIN LEFTJOIN RIGHTJOIN SELF JOIN
zad1
SELECT * FROM customers JOIN orders ON orders.customer_id=customers.id
zad2
SELECT * FROM customers JOIN orders ON order_details.id=customers.id

LIMIT OFFSET
zad1
SELECT * FROM orders LIMIT 10 OFFSET 186
zad2
SELECT * FROM orders LIMIT 10 OFFSET 10

HAVING EXISTS
zad1
SELECT COUNT(id), country FROM customers GROUP BY country HAVING COUNT(id) > 5;
zad2
SELECT c.customer_name, COUNT(c.id) FROM customers AS c JOIN orders AS o ON o.customer_id = c.id GROUP By c.id HAVING COUNT(c.id) > 2 and COUNT(c.id) < 4;
zad3
SELECT e.first_name, e.last_name, COUNT(o.id) FROM employees AS e JOIN orders as o ON o.employee_id = e.id GROUP By e.id HAVING COUNT(o.id) > 10;
zad4
SELECT e.last_name, EXISTS(SELECT COUNT(o.id) FROM orders AS o WHERE o.employee_id = e.id HAVING COUNT(o.id)) FROM employees as e WHERE e.last_name="Davolio" OR e.last_name="Fuller";
zad5
SELECT id, name, contact_name, address, city, post_code, country, phone FROM suppliers AS s WHERE EXISTS( SELECT p.id FROM products AS p WHERE p.price < 20 AND p.supplier_id = s.id );

ANY ALL
zad1
SELECT p.name FROM products AS p JOIN orders_details AS o ON p.id = o.product_id WHERE o.id = ANY(SELECT o.id FROM orders_details AS o WHERE o.quantity = 10);
zad2
SELECT p.name FROM products AS p JOIN orders_details AS o ON p.id = o.product_id WHERE o.id = ANY(SELECT o.id FROM orders_details as o WHERE o.quantity > 99);
zad3
SELECT * FROM products AS p WHERE p.id = ALL(SELECT p.id FROM products AS p WHERE p.name);
zad4
SELECT p.name FROM products AS p JOIN orders_details AS o ON p.id = o.product_id WHERE o.id = ALL(SELECT o.id FROM orders_details AS o WHERE o.quantity = 10);

CASE
zad1
SELECT o.id, o.quantity, CASE WHEN o.quantity > 30 THEN 'sztuk jest wiecej niz 30' WHEN o.quantity < 30 THEN 'sztuk jest mniej niz 30' ELSE 'jest rowna 30' END AS ilosc FROM orders_details AS o;
zad2
SELECT c.customer_name, c.city, c.country FROM customers AS c ORDER BY CASE WHEN c.city = NULL THEN c.country ELSE c.city END;

ALL
zad1
SELECT p.id, p.name, SUM(o.quantity) AS suma FROM products AS p JOIN orders_details AS o ON o.product_id = p.id GROUP BY p.id ORDER BY suma DESC LIMIT 10;
zad2
SELECT c.id, c.customer_name, COUNT(d.quantity) AS liczbaZamowien, SUM(d.quantity) AS sumaZamowionychRzeczy FROM customers AS c JOIN orders AS o ON o.customer_id = c.id JOIN orders_details AS d ON o.id = d.order_id GROUP BY c.id ORDER BY sumaZamowionychRzeczy DESC LIMIT 10;
zad3
SELECT c.id, c.category_name, SUM(d.quantity) AS ilosc FROM categories AS c JOIN products AS p ON p.category_id = c.id JOIN orders_details AS d ON d.product_id = p.id GROUP BY c.id ORDER BY ilosc DESC LIMIT 1;
zad4
SELECT c.id, c.category_name, SUM(d.quantity) AS ilosc FROM categories AS c JOIN products AS p ON p.category_id = c.id JOIN orders_details AS d ON d.product_id = p.id GROUP BY c.id;


